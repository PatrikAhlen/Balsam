/*
 * GitProvider
 *
 * This a service contract for the GitProvider in Balsam.
 *
 * The version of the OpenAPI document: 2.0
 * 
 * Generated by: https://openapi-generator.tech
 */

using System;
using System.Collections.Generic;
using System.ComponentModel.DataAnnotations;
using Microsoft.AspNetCore.Authorization;
using Microsoft.AspNetCore.Mvc;
using Microsoft.AspNetCore.Http;
using Swashbuckle.AspNetCore.Annotations;
using Swashbuckle.AspNetCore.SwaggerGen;
using GitProvider.Attributes;
using GitProvider.Models;

namespace GitProvider.Controllers
{ 
    /// <summary>
    /// 
    /// </summary>
    [ApiController]
    public abstract class RepositoryApiController : ControllerBase
    { 
        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Create a branch from main branch in a existing repository</remarks>
        /// <param name="repository">The name of the repository where the branch should be created.</param>
        /// <param name="preferredName">The preferred name of the branch.</param>
        /// <response code="200">Success</response>
        /// <response code="400">Error respsone for 400</response>
        [HttpPost]
        [Route("/api/v1/repos/{repository}/branches")]
        [ValidateModelState]
        [SwaggerOperation("CreateBranch")]
        [SwaggerResponse(statusCode: 200, type: typeof(BranchCreatedResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error respsone for 400")]
        public abstract IActionResult CreateBranch([FromRoute (Name = "repository")][Required]string repository, [FromQuery (Name = "preferredName")]string? preferredName);

        /// <summary>
        /// 
        /// </summary>
        /// <remarks>Creates a new repository</remarks>
        /// <param name="preferredName">The preferred name of the repository</param>
        /// <response code="200">Success</response>
        /// <response code="400">Error respsone for 400</response>
        [HttpPost]
        [Route("/api/v1/repos")]
        [ValidateModelState]
        [SwaggerOperation("CreateRepo")]
        [SwaggerResponse(statusCode: 200, type: typeof(RepositoryCreatedResponse), description: "Success")]
        [SwaggerResponse(statusCode: 400, type: typeof(Problem), description: "Error respsone for 400")]
        public abstract IActionResult CreateRepo([FromQuery (Name = "preferredName")][Required()]string preferredName);
    }
}
